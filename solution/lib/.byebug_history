q
all_nodes[compress_node]
distance_from_root
q
@parent.children.count
@parent
parent
all_nodes.count
puts all_nodes
all_nodes
q
all_nodes
q
c
q
nodes_visited
end_time - start_time
start_time
player
q
c
q
@player
player
s
q
c
display nodes_to_visit.length
c
q
freecells
c
freecells
q
freecells
c
q
foundations
freecells
tableaus
n
tableaus
c
q
c
q
c
q
c
s
c
q
c
q
c
q
c
prev_game_states
c
q
prev_game_states
c
q
to_pile
from_pile
tableaus
reverse_map
c
reverse_map
tableaus
c
tableaus
c
@reverse_map
@tableaus
c
@tableaus
c
@tableaus
c
@tableaus
c
q
reverse_map
from_pile
c
display reverse_map[to_pile]
display reverse_map[from_pile]
c
q
c
q
from_pile
reverse_map
c
display reverse_map[to_pile]
display reverse_map[from_pile]
c
q
c
to_pile
from_pile
c
q
reverse_map[from_pile]
from_pile
c
reverse_map
c
reverse_map
c
display @reverse_map.object_id
@reverse_map
@prev_game_states
c
q
start_node.children[0].display.object_id
start_node.display.object_id
start_node.reverse_map.object_id
start_node.children[0].reverse_map.object_id
start_node.children[0].prev_game_states.object_id
start_node.prev_game_states.object_id
q
start_node.children.length
c
start_node.children.length
q
start_node.prev_game_states
start_node.children.length
start_node.length
start_node
q
deck
